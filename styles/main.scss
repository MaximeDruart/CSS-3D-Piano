// @use 'functions' as *;  // import is deprecated but @use doesn't seem to work so idk


// functions needed for trigonometry
// https://css-tricks.com/snippets/sass/power-function/
// https://css-tricks.com/snippets/sass/correctly-adding-unit-number/
// https://css-tricks.com/snippets/sass/strip-unit-function/

// trigonometrical / inverse trignometrical functions needed for variables operations
// https://www.unindented.org/blog/trigonometry-in-sass/
// http://thesassway.com/advanced/inverse-trigonometric-functions-with-sass

@import 'functions';

// i tried to make the code as modular as possible.

// Changing these properties change the whole piano and i'm quite happy about it
// maintenant comment les changer dynamiquement sachant qu'elles disparaissent lorsqu'elles sont processed en css.
// Now i'd like to dynamically change them but, as they only exist in scss and disappear when processed, it's impossible to get them in js
// OPTION A (a) : redo everything with css variables (which i can get thru js) but i'd lose the trigonometrical functions
// PETIT B (b) : export every variable to js and set them manually (unhealthy at the very least)
// PETIT C (c) : forget about it
// PETIT D (d) : ???
$kb-final-width : 770px;
$kb-final-length :300px;
$kb-final-height : 110px;

$kb-under-width:$kb-final-width;
$kb-under-length:$kb-final-length;
$kb-under-height:20px;

$kb-tile-to-main-ratio : 0.57; // valeur arbitraire pour que ca soit joli :)
$kb-main-length :$kb-final-length*$kb-tile-to-main-ratio; 
$kb-main-lg-height: $kb-final-height - $kb-under-height;

// the 2 side pieces, which are trapezoids. Made me go through high school maths again.
$kb-sides-height : $kb-final-height - $kb-under-height;
$kb-sides-lg-height : $kb-main-lg-height;
$kb-sides-sm-height : 30px;
$kb-sides-diff : $kb-sides-lg-height - $kb-sides-sm-height;
$kb-sides-ratio : strip-unit($kb-sides-sm-height / $kb-sides-lg-height); // ratio entre petit coté / long coté
$kb-sides-ratio : ((1 - $kb-sides-ratio) * 100)+0%; // transformation en pourcentage
$kb-sides-width : 50px;
$kb-sides-length :$kb-final-length;
$kb-sides-hypothenuse : sqrt(strip-unit(pow($kb-sides-length, 2) + pow($kb-sides-diff, 2)))+0px; // les maths sont énervés / le trapèze est controlé huh
$kb-sides-cos : strip-unit($kb-sides-diff / $kb-sides-hypothenuse);
$kb-sides-angle : acos($kb-sides-cos, deg, $default-threshold);

// $kb-tiles-height : 100px;
// $kb-tiles-width : 800px;
$kb-tiles-length :$kb-final-length - $kb-main-length;

// the main block, also a trapezoid. its measurements are based on the sides
$kb-main-width : $kb-final-width - (2*$kb-sides-width);
$kb-main-sm-height : $kb-main-lg-height - $kb-main-length / tan($kb-sides-angle);
$kb-main-diff : $kb-main-lg-height - $kb-main-sm-height;
$kb-main-ratio : strip-unit($kb-main-sm-height / $kb-main-lg-height); // ratio entre petit coté / long coté
$kb-main-ratio : ((1 - $kb-main-ratio) * 100)+0%; // transformation en pourcentage
$kb-main-angle : $kb-sides-angle;
$kb-main-hypothenuse : sqrt(strip-unit(pow($kb-main-length, 2) + pow($kb-main-diff, 2)))+0px; // les maths sont énervés / le trapèze est controlé huh

$kb-whiteTiles-count : 21;
$kb-whiteTiles-spacing : 2px;

$kb-whiteTile-height : 15px;
$kb-whiteTile-width : 30px;
$kb-whiteTile-length :$kb-final-length - $kb-main-length;

$kb-whiteTiles-side-spacing : ($kb-main-width - ($kb-whiteTiles-count * ($kb-whiteTile-width + $kb-whiteTiles-spacing))) / 2;

// bon ca serait trop simple si les touches noires étaient des rectangels
$kb-blackTile-height : 20px;
$kb-blackTile-width : 15px;
$kb-blackTile-lg-length :$kb-whiteTile-length*0.6;
$kb-blackTile-sm-length : $kb-blackTile-lg-length - 15;
$kb-blackTile-length-diff : $kb-blackTile-lg-length - $kb-blackTile-sm-length;
$kb-blackTile-ratio : strip-unit($kb-blackTile-sm-length / $kb-blackTile-lg-length); // ratio entre petit coté / long coté
$kb-blackTile-ratio : (($kb-blackTile-ratio) * 100)+0%; // transformation en pourcentage
$kb-blackTile-hypothenuse : sqrt(strip-unit(pow($kb-blackTile-height, 2) + pow($kb-blackTile-length-diff, 2))) + 0px;
$kb-blackTile-tan : strip-unit($kb-blackTile-length-diff / $kb-blackTile-height) ; // calcul de la tangente
$kb-blackTile-angle : atan($kb-blackTile-tan, deg, $default-threshold);
$kb-blackTiles-count :15;

@font-face {
    font-family: "acronym_bold";
    src : url("../fonts/Acronym-Bold.ttf")
}

@font-face {
    font-family: "acronym_extraBold";
    src: url("../fonts/Acronym-ExtraBold.ttf")
}



body {
    margin: 0;
    padding: 0;
    font-size: 14px;
    overflow: hidden;
    font-family : "acronym_bold";
}

* {
    box-sizing: border-box;
}

@mixin wierd-border-left($width : 110%, $height : 100%){
    z-index: -1;
    position: relative;

    &::before{
        box-sizing: border-box;
        pointer-events: none;
        content: "";
        position: absolute;
        left:50%;
        transform:translateX(-50%);
        width:$width;
        height:$height;
        border:3px solid black;
        z-index: -2;
    }

    &::after{
        box-sizing: border-box;
        pointer-events: none;
        content : "";
        position: absolute;
        left:-25%;
        top:50%;
        transform:translate(-50%, -50%);
        width: $width;
        height:65%;
        background : white;
        z-index: -1;
    }
}

@mixin wierd-border-right($width : 110%, $height : 100%) {
    @include wierd-border-left($width, $height);

    &::after{
        right:-25%;
        left:100%;
    }
}

@mixin flex-full-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin flex-row-align-center {
    display : flex;
    flex-flow: row nowrap;
    align-items: center;
}

.hiddenDisp{
    display:none !important;
}



.cont {
    color: $kb-blackTile-ratio; // testing
    position: relative;
    width: 100vw;
    height: 100vh;

    * {
        transform-style: preserve-3d;
        user-select: none; // sinon on peut highlight le texte et ca fout bien la merde
    }

    .mockup{
        // width:100%;
        // height:100%;
        // background-image: url("../images/scp/Web\ 1920\ –\ 28.jpg");
        // opacity:0.2;
        // background-size:100%;
        // background-position: center;
    }

    .ui {
        display: none;
    }

    .header{
        width:86vw;
        height:5vh;
        border:1px solid black;
        display : flex;
        flex-flow : row nowrap;
        align-items: center;
        justify-content: space-between;
        margin : 0 auto;

        &-left{
            width:45%;
            height: 100%;
            display: flex;
            align-items: center;
        }

        &-right{
            width:15%;
            height: 100%;
            display: flex;
            align-items: center;

            a img{
                height:30px;
                width: auto;
            }
        }
    }

    .title {
        position: absolute;
        width: 80vw;
        height: 80vh;
        top:calc(50% - 80vh / 2);
        left:calc(50% - 80vw / 2);
        display: flex;
        flex-flow: column nowrap;
        justify-content: space-between;
        align-items: center;

        .upper{
            font-size : 40px;
        }

        .lower{
            display: flex;
            flex-flow: column nowrap;
            align-items: center;
        }
    }
 

    .tutorialInterface {
        position: absolute;
        width: 95vw;
        height: 80vh;
        top:calc(50% - 80vh / 2);
        left:calc(50% - 95vw / 2);

        display: none;
        flex-flow: row nowrap;
        justify-content: space-around;
        align-items: center;

        .left{
            width:35%;
            height : 100%;
            position: relative;
            display: flex;
            flex-flow: column nowrap;
            align-items: center;
            justify-content: space-between;

            .options{
                @include flex-row-align-center;
                justify-content: space-between;
                width:90%;
                height: 20%;

                .wireframe-mode{
                    @include flex-row-align-center;

                    .on-style {
                        @include wierd-border-right;

                    }

                    .off-style {
                        color: white;
                        -webkit-text-stroke: 2px solid black;
                    }
                }

                .replay{
                    @include wierd-border-left(130%, 105%);
                    height: 28px;
                    line-height: 28px;
                }
            }
            
            .cube{
                position: absolute;
                perspective:800px;
                top:50%;
                left:50%;
                $cube-width : 200px;

                .cube-caption{
                    opacity: 0.7;
                    position: absolute;
                    left : 20%;
                    top:-15vh;
                    width:22vw;
                }

                .cube-wrap {
                    // cursor: move;
                    .cube-side {
                        position : absolute;
                        width:$cube-width;
                        height: $cube-width;
                        top:-$cube-width / 2;
                        left:-$cube-width / 2;
    
                        &-zpos {
                            transform: rotateX(0deg) translateZ(calc(#{$cube-width} / 2));
                        }
                        &-zneg {
                            transform: rotateX(180deg) translateZ(calc(#{$cube-width} / 2));
                        }
                        &-xpos {
                            transform: rotateY(90deg) translateZ(calc(#{$cube-width} / 2));
                        }
                        &-xneg {
                            transform: rotateY(-90deg) translateZ(calc(#{$cube-width} / 2));
                        }
                        &-yneg {
                            transform: rotateX(-90deg) translateZ(calc(#{$cube-width} / 2));
                        }
    
                        &-ypos {
                            transform: rotateX(90deg) translateZ(calc(#{$cube-width} / 2));
                        }
                    }
                }
            }

            .slide{
                width: 90%;
                height: 20%;
                display: flex;
                flex-flow: row nowrap;
                align-items: center;
                justify-content: space-between;

                .line{
                    position: relative;
                    width:75%;
                    height:2px;
                    background-color: black;

                    .actual-value{
                        position: absolute;
                        top:calc(50% - (30px / 2));
                        left : calc(50% - (150px / 2));
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        width:130px;
                        height:30px;
                        z-index: 2;
                        background-color: white;
                        // border:1px solid black;
                        font-size: 18px;
                        cursor : pointer;
                    }
                }

                .start-value, .end-value{
                    font-family: 'acronym_extraBold';
                }

                
                .end-value{

                }
            }
        }

        .center-line{
            width:3%;
            height:92%;
            display: flex;
            flex-flow: column nowrap;
            align-items: center;
            justify-content: space-between;
            align-self: flex-start;

            span{
                transform: rotate(-90deg);
                display: inline-block;
                font-size: 32px;
            }

            .line{
                order:-1;
                width:4px;
                height:78%;
                background-color: black;
            }
        }

        .right{

            *{
                user-select: text;
            }

            width : 60%;
            height : 100%;
            padding:20px;
            padding-left:3%;

            .right-title{
                height: 18%;
                width: 100%;
                font-family: 'acronym_extraBold';
                font-size:3.5rem;
                margin-left:-3%;

                .page-number-active{
                    @include wierd-border-right(150%, 110%);
                }
            }
            .right-description {
                height: 25%;
                width: 100%;
                font-size : 16px;
                padding-bottom : 35px;
                
                &-content{
                    margin-bottom : 0;
                }

                .read-more{
                    margin-top: 0;
                    font-family: 'acronym_extraBold';
                }
            }

            .editor {
                width:100%;
                border:4px solid black;
                height:40%;
                position: relative;
                padding: 20px;

                .nav{
                    @include flex-row-align-center;
                    justify-content: space-around;
                    position: absolute;
                    width:200px;
                    height:35px;
                    top:-20px;
                    left:20px;
                    

                    .html, .css{
                        @include flex-full-center;
                        width:50%;
                        height: 35px;
                        background : white;
                        z-index:3;
                        
                        .html-wrap, .css-wrap{
                            user-select:none ;
                            border:3px solid black;
                            width:80%;
                            height:80%;
                            text-align: center;
                            cursor:pointer;
                        }
                    }

                    .html{
                        transform : translateX(5px)
                    }

                    .css{
                        transform : translateX(-5px)
                    }
                }

                .content{
                    width:100%;
                    height: 100%;
                    .html-content, .css-content{
                        position: absolute;
                        left:0px;
                        top:0px;
                        width:calc(100% - 0px);
                        height:calc(100% - 0px);
                    }

                    .css-content{
                        // display:none;
                    }
                }

                .up{
                    position: absolute;
                    right:10px;
                    top:10px;
                    border:2px solid black;
                    width:50px;
                    height:50px;
                }
            }

            .nav {
                @include flex-row-align-center;
                justify-content: space-between;
                width:80%;
                height: 13%;
                margin:0 auto;

                .last, .next{
                    text-align: center;
                    width: 45px;
                    height: 30px;
                    line-height: 30px;
                    cursor: pointer;
                }

                .last{
                    @include wierd-border-left(110%, 100%);
                }

                .next{
                    @include wierd-border-right(110%, 100%);
                }

                .completion{
                    font-family: 'acronym_extraBold';
                    font-size: 30px;
                }

            }
        }
    }

    .keyboardBody {
        position: absolute;
        left: 50%;
        top: 50%;
        // background: grey;
        perspective: 800px;

        .kb-anim-wrapper {
            animation-fill-mode: both;
            transform: rotateX(-30deg);

            .kb-under {

                .kb {
                    position: absolute;
                    background-color: #444;
                    opacity: 0.6;
                    border: 1px solid white;

                    // front and back (1000 * 100)
                    &-zpos {
                        top: calc(#{$kb-under-height} / -2);
                        left: calc(#{$kb-under-width} / -2);
                        width: $kb-under-width;
                        height: $kb-under-height;
                        transform: rotateX(0deg) translateZ(calc(#{$kb-under-length} / 2));
                    }

                    &-zneg {
                        top: calc(#{$kb-under-height} / -2);
                        left: calc(#{$kb-under-width} / -2);
                        width: $kb-under-width;
                        height: $kb-under-height;
                        transform: rotateX(180deg) translateZ(calc(#{$kb-under-length} / 2));
                    }

                    // left and right ( 200 * 100)
                    &-xpos {
                        top: calc(#{$kb-under-height} / -2);
                        left: calc(#{$kb-under-length} / -2);
                        width: $kb-under-length;
                        height: $kb-under-height;
                        transform: rotateY(90deg) translateZ(calc(#{$kb-under-width} / 2));
                    }

                    &-xneg {
                        top: calc(#{$kb-under-height} / -2);
                        left: calc(#{$kb-under-length} / -2);
                        width: $kb-under-length;
                        height: $kb-under-height;
                        transform: rotateY(-90deg) translateZ(calc(#{$kb-under-width} / 2));
                    }

                    // top and bottom ( 1000 * 200)
                    &-yneg {
                        top: calc(#{$kb-under-length} / -2);
                        left: calc(#{$kb-under-width} / -2);
                        width: $kb-under-width;
                        height: $kb-under-length;
                        transform: rotateX(-90deg) translateZ(calc(#{$kb-under-height} / 2));
                    }

                    &-ypos {
                        top: calc(#{$kb-under-length} / -2);
                        left: calc(#{$kb-under-width} / -2);
                        width: $kb-under-width;
                        height: $kb-under-length;
                        transform: rotateX(90deg) translateZ(calc(#{$kb-under-height} / 2));
                    }
                }
            }

            // trapeze :
            .kb-main {
                pointer-events: none;
                text-align: center;
                color: white;
                transform:translateZ(-#{$kb-final-length / 2 - $kb-main-length / 2}) translateY(-#{$kb-final-height / 2});

                .kb {
                    position: absolute;
                    background-color: black;
                    opacity: 0.6;
                    border: 1px solid white;

                    &-zpos {
                        top: calc(#{$kb-main-sm-height} / -2 + #{$kb-main-diff / 2});
                        left: calc(#{$kb-main-width} / -2);
                        width: $kb-main-width;
                        height: $kb-main-sm-height;
                        transform: rotateX(0deg) translateZ(calc(#{$kb-main-length} / 2));
                    }

                    &-zneg {
                        top: calc(#{$kb-main-lg-height} / -2);
                        left: calc(#{$kb-main-width} / -2);
                        width: $kb-main-width;
                        height: $kb-main-lg-height;
                        transform: rotateX(180deg) translateZ(calc(#{$kb-main-length} / 2));
                    }

                    // left and right ( 200 * 100)
                    &-xpos {
                        top: calc(#{$kb-main-lg-height} / -2);
                        left: calc(#{$kb-main-length} / -2);
                        width: $kb-main-length;
                        height: $kb-main-lg-height;
                        transform: rotateY(-90deg) translateZ(calc(#{$kb-main-width} / -2));
                        clip-path: polygon(0 0, 100% #{$kb-main-ratio}, 100% 100%, 0 100%);
                        -webkit-clip-path : polygon(0 0, 100% #{$kb-main-ratio}, 100% 100%, 0 100%);
                    }

                    &-xneg {
                        top: calc(#{$kb-main-lg-height} / -2);
                        left: calc(#{$kb-main-length} / -2);
                        width: $kb-main-length;
                        height: $kb-main-lg-height;
                        transform: rotateY(-90deg) translateZ(calc(#{$kb-main-width} / 2));
                        clip-path: polygon(0 0, 100% #{$kb-main-ratio}, 100% 100%, 0 100%);
                        -webkit-clip-path: polygon(0 0, 100% #{$kb-main-ratio}, 100% 100%, 0 100%);
                    }

                    // top and bottom ( 1000 * 200)
                    &-yneg {
                        top: calc(#{$kb-main-length} / -2);
                        left: calc(#{$kb-main-width} / -2);
                        width: $kb-main-width;
                        height: $kb-main-length;
                        transform: rotateX(-90deg) translateZ(calc(#{$kb-main-lg-height} / 2));
                    }

                    &-ypos {
                        top: calc(#{$kb-main-hypothenuse} / -2);
                        left: calc(#{$kb-main-width} / -2);
                        width: $kb-main-width;
                        height: $kb-main-hypothenuse;
                        transform: translateY(#{-($kb-main-sm-height / 2)}) rotateX($kb-main-angle);
                    }
                }

            }

            .kb-sides {
                pointer-events: none;

                &.kb-sides-right {
                    transform: translateX(#{$kb-final-width / 2 - $kb-sides-width /2}) translateY(calc(-#{$kb-final-height / 2}));
                }

                &.kb-sides-left {
                    transform: translateX(-#{$kb-final-width / 2 - $kb-sides-width /2}) translateY(calc(-#{$kb-final-height / 2}));
                }

                .kb {
                    position: absolute;
                    background-color: black;
                    opacity: 0.6;
                    border: 1px solid white;

                    &-zpos {
                        top: calc(#{$kb-sides-sm-height} / -2 + #{$kb-sides-diff / 2});
                        left: calc(#{$kb-sides-width} / -2);
                        width: $kb-sides-width;
                        height: $kb-sides-sm-height;
                        transform: rotateX(0deg) translateZ(calc(#{$kb-sides-length} / 2));
                    }

                    &-zneg {
                        top: calc(#{$kb-sides-lg-height} / -2);
                        left: calc(#{$kb-sides-width} / -2);
                        width: $kb-sides-width;
                        height: $kb-sides-lg-height;
                        transform: rotateX(180deg) translateZ(calc(#{$kb-sides-length} / 2));
                    }

                    // left and right ( 200 * 100)
                    &-xpos {
                        top: calc(#{$kb-sides-lg-height} / -2);
                        left: calc(#{$kb-sides-length} / -2);
                        width: $kb-sides-length;
                        height: $kb-sides-lg-height;
                        transform: rotateY(-90deg) translateZ(calc(#{$kb-sides-width} / -2));
                        clip-path: polygon(0 0, 100% #{$kb-sides-ratio}, 100% 100%, 0 100%);
                        -webkit-clip-path: polygon(0 0, 100% #{$kb-sides-ratio}, 100% 100%, 0 100%);
                    }

                    &-xneg {
                        top: calc(#{$kb-sides-lg-height} / -2);
                        left: calc(#{$kb-sides-length} / -2);
                        width: $kb-sides-length;
                        height: $kb-sides-lg-height;
                        transform: rotateY(-90deg) translateZ(calc(#{$kb-sides-width} / 2));
                        clip-path: polygon(0 0, 100% #{$kb-sides-ratio}, 100% 100%, 0 100%);
                        -webkit-clip-path: polygon(0 0, 100% #{$kb-sides-ratio}, 100% 100%, 0 100%);
                    }

                    // top and bottom ( 1000 * 200)
                    &-yneg {
                        top: calc(#{$kb-sides-length} / -2);
                        left: calc(#{$kb-sides-width} / -2);
                        width: $kb-sides-width;
                        height: $kb-sides-length;
                        transform: rotateX(-90deg) translateZ(calc(#{$kb-sides-height} / 2));
                    }

                    &-ypos {
                        top: calc(#{$kb-sides-hypothenuse} / -2);
                        left: calc(#{$kb-sides-width} / -2);
                        width: $kb-sides-width;
                        height: $kb-sides-hypothenuse;
                        // pourquoi cette valeur ? je sais meme plus
                        transform: translateY(#{-($kb-sides-sm-height) / 2}) rotateX($kb-sides-angle);
                    }
                }
            }

            .kb-tiles {

                .kb-tile {
                    transform-origin: center;
                    .kb {
                        position: absolute;
                        background-color: white;
                        opacity: 0.6;
                        border: 1px solid black;
                    }
                }

                &.tiles-white {
                    transform : translateZ(#{$kb-final-length / 2 - $kb-tiles-length / 2}) translateY(-#{$kb-final-height / 2 - $kb-under-height}) translateX(#{(-$kb-main-width / 2 + $kb-whiteTile-width / 2)+$kb-whiteTiles-side-spacing});

                    .kb-tile{    

                        .kb {
                            &-zpos {
                                top: calc(#{$kb-whiteTile-height} / -2);
                                left: calc(#{$kb-whiteTile-width} / -2);
                                width: $kb-whiteTile-width;
                                height: $kb-whiteTile-height;
                                transform: rotateX(0deg) translateZ(calc(#{$kb-whiteTile-length} / 2));
                            }
    
                            &-zneg {
                                top: calc(#{$kb-whiteTile-height} / -2);
                                left: calc(#{$kb-whiteTile-width} / -2);
                                width: $kb-whiteTile-width;
                                height: $kb-whiteTile-height;
                                transform: rotateX(180deg) translateZ(calc(#{$kb-whiteTile-length} / 2));
                            }
    
                            // left and right ( 200 * 100)
                            &-xpos {
                                top: calc(#{$kb-whiteTile-height} / -2);
                                left: calc(#{$kb-whiteTile-length} / -2);
                                width: $kb-whiteTile-length;
                                height: $kb-whiteTile-height;
                                transform: rotateY(90deg) translateZ(calc(#{$kb-whiteTile-width} / 2));
                            }
    
                            &-xneg {
                                top: calc(#{$kb-whiteTile-height} / -2);
                                left: calc(#{$kb-whiteTile-length} / -2);
                                width: $kb-whiteTile-length;
                                height: $kb-whiteTile-height;
                                transform: rotateY(-90deg) translateZ(calc(#{$kb-whiteTile-width} / 2));
                            }
    
                            // top and bottom ( 1000 * 200)
                            &-yneg {
                                top: calc(#{$kb-whiteTile-length} / -2);
                                left: calc(#{$kb-whiteTile-width} / -2);
                                width: $kb-whiteTile-width;
                                height: $kb-whiteTile-length;
                                transform: rotateX(-90deg) translateZ(calc(#{$kb-whiteTile-height} / 2));
                            }
    
                            &-ypos {
                                top: calc(#{$kb-whiteTile-length} / -2);
                                left: calc(#{$kb-whiteTile-width} / -2);
                                width: $kb-whiteTile-width;
                                height: $kb-whiteTile-length;
                                transform: rotateX(90deg) translateZ(calc(#{$kb-whiteTile-height} / 2));
                            }
                        }
                    }
                }

                &.tiles-black {
                    //  à ajuster
                    transform : translateZ(#{$kb-tile-to-main-ratio * 100 }px) translateY(-#{($kb-final-height / 2 - $kb-under-height) + $kb-whiteTile-height / 2}) translateX(#{(-$kb-main-width / 2 + $kb-blackTile-width / 2)}); 

                    .kb-tile {
                        .kb {
                            background-color: black;
                            opacity: 0.8;
                            // border : 1px solid white;

                            &-zpos {
                                top: calc(#{$kb-blackTile-hypothenuse} / -2);
                                left: calc(#{$kb-blackTile-width} / -2);
                                width: $kb-blackTile-width;
                                height: $kb-blackTile-hypothenuse;
                                transform: translateZ(#{($kb-blackTile-lg-length / 2) - $kb-blackTile-length-diff / 2} ) rotateX($kb-blackTile-angle);
                            }

                            &-zneg {
                                top: calc(#{$kb-blackTile-height} / -2);
                                left: calc(#{$kb-blackTile-width} / -2);
                                width: $kb-blackTile-width;
                                height: $kb-blackTile-height;
                                transform: rotateX(180deg) translateZ(calc(#{$kb-blackTile-lg-length} / 2));
                            }

                            // left and right ( 200 * 100)
                            &-xpos {
                                top: calc(#{$kb-blackTile-height} / -2);
                                left: calc(#{$kb-blackTile-lg-length} / -2);
                                width: $kb-blackTile-lg-length;
                                height: $kb-blackTile-height;
                                transform: rotateY(-90deg) translateZ(calc(#{$kb-blackTile-width} / -2));
                                clip-path: polygon(0 0, #{$kb-blackTile-ratio} 0, 100% 100%, 0% 100%);
                                -webkit-clip-path: polygon(0 0, #{$kb-blackTile-ratio} 0, 100% 100%, 0% 100%);

                            }

                            &-xneg {
                                top: calc(#{$kb-blackTile-height} / -2);
                                left: calc(#{$kb-blackTile-lg-length} / -2);
                                width: $kb-blackTile-lg-length;
                                height: $kb-blackTile-height;
                                transform: rotateY(-90deg) translateZ(calc(#{$kb-blackTile-width} / 2));
                                clip-path: polygon(0 0, #{$kb-blackTile-ratio} 0, 100% 100%, 0% 100%);
                                -webkit-clip-path: polygon(0 0, #{$kb-blackTile-ratio} 0, 100% 100%, 0% 100%);
                            }

                            // top and bottom ( 1000 * 200)
                            &-yneg {
                                top: calc(#{$kb-blackTile-lg-length} / -2);
                                left: calc(#{$kb-blackTile-width} / -2);
                                width: $kb-blackTile-width;
                                height: $kb-blackTile-lg-length;
                                transform: rotateX(-90deg) translateZ(calc(#{$kb-blackTile-height} / 2));
                            }

                            &-ypos {
                                top: calc(#{$kb-blackTile-sm-length} / -2);
                                left: calc(#{$kb-blackTile-width} / -2);
                                width: $kb-blackTile-width;
                                height: $kb-blackTile-sm-length;
                                transform: rotateX(90deg) translateZ(#{$kb-blackTile-height / 2}) translateY(#{ - ($kb-blackTile-lg-length - $kb-blackTile-sm-length) / 2});
                            }
                        }

                    }
                }
            }
        }

        // 920 * 300 * 20
    }
}

